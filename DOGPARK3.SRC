100  .TITLE "DOGPARK DEMO 3"
110  *=$5000
120  .OPT OBJ
130 ;
140 ; GENERAL SYSTEM EQUATES
150 ;
160 STRIG0=$0284
170 STICK0=$0278
180 CONSOL=$D01F
190 RTCLOK=$14
200 COLOR0=$02C4
210 COLCRS=$55
220 ROWCRS=$54
230 ;
240 ; PROGRAM VARS AND CONSTANTS
250 ;
260 COLOR .DS 1
270 HUE .DS 1
280 LUMNCE .DS 1
290 ;
300 DOGRGT .BYTE $3E
310 DOGLFT .BYTE $3C
320 BLANK .BYTE $20
330 DOG .DS 1
340 ;
350 CURX=$3D
360 CURY=$3E
370 OLDX=$3F
380 OLDY=$40
390 STKPOS .DS 1
400 ;
410 MINX .BYTE $00
420 MINY .BYTE $00
430 MAXX .BYTE $13
440 MAXY .BYTE $17
450 PAUZE .BYTE $04
460 ;
470 ;IOCB EQUATES 
480 ;
490 CIOV=$E456
500 ;
510 ICCOM=$0342
520 ICBAL=$0344
530 ICBAH=$0345
540 ICAX1=$034A
550 ICAX2=$034B
560 ;
570 OPEN .BYTE $03
580 CLOSE .BYTE $0C
590 ;
1000 ; MAIN LOGIC
1010 ;
1020 BEGIN JSR SETUP  ;Call setup subroutine
1030 LOOP LDA CURX    ;Start main loop
1040  STA OLDX        ;Copying current x/y to old
1050  LDA CURY
1060  STA OLDY
1070  JSR CHKMVE      ;Did stick move?
1080  LDA OLDX
1090  CMP CURX
1100  BNE MOVEDG      ;Old<>New, move dog 
1110  LDA OLDY
1120  CMP CURY
1130  BNE MOVEDG      ;Old<>New, move dog 
1140  JMP CHKEXT      ;No move, check exit
1150 MOVEDG JSR DELAY ;Slow things for humans
1160  JSR DRAWDG      ;Erase old, draw in new
1170  JMP CHKEXT
1180 ;
2000 ; SETUP LOGIC
2010 ;
2020 SETUP LDX #$60   ;Channel 6
2030  LDA CLOSE       ;Close Screen first
2040  STA ICCOM,X 
2050  JSR CIOV
2060 ;
2070  LDX #$60        ;Channel 6
2080  LDA OPEN        ;Open Screen
2090  STA ICCOM,X
2100  LDA # <SCREEN   ;Address of "S:" string
2110  STA ICBAL,X    
2120  LDA # >SCREEN
2130  STA ICBAH,X 
2140  LDA #$01        ;Graphics 1
2150  STA ICAX2,X 
2160  LDA #$0C        ;Read/Write mode
2170  STA ICAX1,X 
2180  JSR CIOV
2190 ;
2200  LDX #$04        ;Color reg.4, background
2210  LDA #$0C        ;Green
2220  STA HUE
2230  LDA #$0F        ;Bright!
2240  STA LUMNCE
2250  JSR SETCLR
2260 ;
2270  LDX #$00        ;Color reg.0, character
2280  LDA #$00        ;Darkest black
2290  STA HUE
2300  STA LUMNCE
2310  JSR SETCLR
2320 ;
2330  LDA DOGRGT      ;Initialize dog facing right
2340  STA DOG
2350  STA COLOR
2360  LDA #$00        ;initial x/y screen positions
2370  STA CURX
2380  STA CURY
2390  TAX             ;Setup for plot character
2400  TAY
2410  JSR PLOTCH
2420 ;
2430  RTS             ;Setup all done
2440 ;
3000 ; CHECK MOVE LOGIC
3010 ;
3020 CHKMVE LDA STICK0;Get reading from hardware
3030  STA STKPOS      ;Store in variable
3040  AND #$01        ;Stick up?
3050  BNE STKDWN      ;no, check down
3060  LDA MINY        ;else
3070  CMP CURY        ;at top of screen?
3080  BNE SUBY        ;no, subtract 1 from Y
3090  LDA MAXY        ;else
3100  STA CURY        ;set at bottom Screen
3110  JMP STKLFT      ;go check left/right
3120 SUBY DEC CURY    ;y=y-1
3130  JMP STKLFT      ;go check left/right
3140 ;
3150 STKDWN LDA STKPOS;Get stick position
3160  AND #$02        ;Stick down?
3170  BNE STKLFT      ;no, check left
3180  LDA MAXY        ;else
3190  CMP CURY        ;at bottom of screen?
3200  BNE ADDY        ;no, add 1 to Y
3210  LDA MINY        ;else
3220  STA CURY        ;set at top Screen
3230  JMP STKLFT      ;go check left/right
3240 ADDY INC CURY    ;y=y+1
3250 ;
3260 STKLFT LDA STKPOS;Get reading from hardware
3270  AND #$04        ;Stick left?
3280  BNE STKRGT      ;no, check right
3290  LDA DOGLFT      ;Set dog facing left
3300  STA DOG
3310  LDA MINX        ;else
3320  CMP CURX        ;at left of screen?
3330  BNE SUBX        ;no, subtract 1 from X
3340  LDA MAXX        ;else
3350  STA CURX        ;set at right edge
3360  JMP CHKOVR      ;checks all done
3370 SUBX DEC CURX    ;x=x-1
3380  JMP CHKOVR      
3390 ;
3400 STKRGT LDA STKPOS;Get stick position
3410  AND #$08        ;Stick right?
3420  BNE CHKOVR      ;no, checks done
3430  LDA DOGRGT      ;Set dog facing right
3440  STA DOG
3450  LDA MAXX        ;else
3460  CMP CURX        ;at right of screen?
3470  BNE ADDX        ;no, add 1 to X
3480  LDA MINX        ;else
3490  STA CURX        ;set at left of Screen
3500  JMP CHKOVR
3510 ADDX INC CURX    ;x=x+1
3520 CHKOVR RTS       ;Checks are done!
3530 ;
4000 ; DRAW CHARACTERS, CHECK FOR EXIT,
4010 ; AND DELAY LOGIC
4020 ;
4030 DRAWDG LDA BLANK ;blank out old position
4040  STA COLOR
4050  LDX OLDX
4060  LDY OLDY
4070  JST PLOTCH
4080 ;
4090  LDA DOG         ;plot dog char at nrew
4100  STA COLOR
4110  LDX CURX
4120  LDY CURY
4130  JSR PLOTCH
4140 ;
4150  RTS
4160 ;
4200 DELAY LDA #$00   ;zero out RTCLOK
4210  STA RTCLOK
4220 DLOOP LDA RTCLOK ;delay LOOP
4230  CMP PAUZE       ;RTCLOK >= PAUZE?
4240  BCS DONE        ;yes, exit LOOP
4250  JMP DLOOP       ;else still waiting
4260 DONE RTS
4270 ;
4300 CHKEXT LDA STRIG0
4310  BEQ END         ;trigger pressed? exit
4320  LDA CONSOL
4330  CMP #$06        ;START pressed?
4340  BEQ END         ;yes, then exit
4350  JMP LOOP        ;else jump to main loop
4360 END RTS          ;Program over!
4370 ;
5000 ; GENERAL PURPOSE SUBROUTINES
5010 ;
5020 SETCLR LDA HUE
5030  ASL A           ;shift 4 low bits to hi
5040  ASL A 
5050  ASL A 
5060  ASL A 
5070  ORA LUMNCE      ;put luminance bits in low bits
5080  STA COLOR0,X    ;Put in proper color register
5090  RTS
5100 ;
5110 PLOTCH STX COLCRS;x position in column cursor
5120  STY ROWCRS      ;y position in row cursor
5130  LDX #$60        ;Channel 6
5140  LDA #$0B        ;PUTCHR IOCB Command
5150  STA ICCOM,X 
5160  LDA #$00        ;Special PUTCHR buffer length
5170  STA ICBAL,X 
5180  STA ICBAH,X 
5190  LDA COLOR       ;draw dog or blank
5200  JSR CIOV
5210  RTS
5220 ;
6000 ; PROGRAM DATA
6010 ;
6020 SCREEN .BYTE "S:",$9B
6030  *=$02E0
6040  .WORD BEGIN

